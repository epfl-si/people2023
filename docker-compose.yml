# This docker-compose.yml file is intended for development support. It
# is *not* meant for production.
# https://www.keycloak.org/server/reverseproxy

name: people2023

services:
  atela:
    build: git@github.com:epfl-si/atela-backend.git
    environment:
      - MOCK_ORACLE=1
      - SITE_URL=atela.${DOMAIN:-dev.jkldsa.com}
    profiles:
      - atela
    working_dir: /var/www/vhosts/app/private/tests

  # Keycloak is an OpenID-Connect IdP (Identity Provider) that is easy
  # to set up. It mocks out that feature in the Rails application,
  # allowing testing with arbitrary users and groups. See further
  # details on the startup sequence of Keycloak (and the
  # --import-realm flag) in ./keycloak/README.md
  keycloak:
    image: quay.io/keycloak/keycloak
    command:
      - start-dev
      - --import-realm
    environment:
      KC_HOSTNAME: "https://keycloak.dev.jkldsa.com"
      # KC_HOSTNAME_PORT: 443
      KC_HTTP_ENABLED: false
      KC_DB: mariadb
      KC_DB_URL: jdbc:mariadb://mariadb:3306/keycloak
      KC_DB_USERNAME: keycloak
      KC_DB_PASSWORD: mariadb
      KEYCLOAK_ADMIN: admin
      KEYCLOAK_ADMIN_PASSWORD: admin
    # ports:
    #   # Since the Keycloak password is easy to guess, opening up this
    #   # port further than localhost is *not* recommended.
    #   - "${KCPORTEXT:-127.0.0.1:8080:}8080"
    labels:
      # keycloak
      - traefik.docker.network=traefik
      - traefik.http.services.kc.loadbalancer.server.port=8080
      - traefik.http.routers.kc.rule=Host("keycloak.${DOMAIN:-dev.jkldsa.com}")
      - traefik.http.routers.kc.tls=true
      # # keycloak management interface
      # - traefik.http.services.kcm.loadbalancer.server.port=9000
      # - traefik.http.routers.kcm.rule=Host("kcm.${DOMAIN:-dev.jkldsa.com}")
      # - traefik.http.routers.kcm.tls=true
    volumes:
      - ./keycloak/import:/opt/keycloak/data/import
    networks:
      - traefik
      - default

  mariadb:
    image: mariadb:latest
    environment:
      MARIADB_USER: keycloak
      MARIADB_PASSWORD: mariadb
      MARIADB_ROOT_PASSWORD: mariadb
    volumes:
      - mariadb:/var/lib/mysql
      - ./db/initdb_dev.d:/docker-entrypoint-initdb.d
    networks:
      - default

  # valkey opensource replacement of redis
  # https://hub.docker.com/r/valkey/valkey/
  cache:
    image: valkey/valkey:7.2
    command:
      - --maxmemory 32mb
    networks:
      - default

  webapp:
    build:
      context: .
      dockerfile: Dockerfile
      args:
        - RAILS_ENV=development
        - APP_HOME=/srv/app
        - LIB_HOME=/srv/lib
    env_file: .env
    # command:
    #   - ./bin/dev
    command: bin/rails server -p 3000 -b 0.0.0.0
    environment:
      # PORT: ${PORT:-3000}
      # ADDR: ${ADDR:-127.0.0.1}
      KILLPID: ${KILLPID:-no}
      RAILS_ENV: development
      RAILS_DEVELOPMENT_HOSTS: "people.${DOMAIN:-dev.jkldsa.com},api.${DOMAIN:-dev.jkldsa.com}"
      DEFAULT_URL: "https://people.${DOMAIN:-dev.jkldsa.com}"
      ENABLE_API_CACHE: "${ENABLE_API_CACHE:-false}"
      ENABLE_WEBMOCK: "${ENABLE_WEBMOCK:-false}"
      # in dev cache is enabled only if the file "tmp/caching-dev.txt" exists
      # if REDIS_CACHE is defined then redis is used otherwise default to memory
      REDIS_CACHE: redis://cache:6379/0
      # I set this to get rid of an warning msg but it does not work.
      # https://www.oracle.com/database/technologies/faq-nls-lang.html
      # NLS_LANG: "en_US.UTF-8"
      CAMIPRO_PHOTO_KEY: ${CAMIPRO_PHOTO_KEY}
      CAMIPRO_PHOTO_HOST: ${CAMIPRO_PHOTO_HOST:-camipro-photos.epfl.ch}
      ORACOURS_PWD: ${ORACOURS_PWD}
      ATELA_KEY: ${ATELA_KEY}
      EPFLAPI_BACKEND_URL: ${EPFLAPI_BACKEND_URL:-https://api.epfl.ch/v1}
      EPFLAPI_PASSWORD: ${EPFLAPI_PASSWORD}
      OFFLINE_CACHEDIR: "/srv/filecache"
      FORCE_AUDIENCE: ${FORCE_AUDIENCE:-4}
      SHOW_ERROR_PAGES: ${SHOW_ERROR_PAGES:-no}
      ADMIN_SCIPERS: ${ADMIN_SCIPERS}
    extra_hosts:
      - "api.${DOMAIN:-dev.jkldsa.com}:${DOCKER_IP}"
      - "keycloak.${DOMAIN:-dev.jkldsa.com}:${DOCKER_IP}"
    volumes:
      - ./:/srv/app
      - storage:/srv/app/storage
      - filecache:/srv/filecache
    labels:
      - traefik.http.middlewares.cgibin.replacepathregex.regex=^/cgi-bin/(.*)
      - traefik.http.middlewares.cgibin.replacepathregex.replacement=/api/v0/$$1

      - traefik.docker.network=traefik
      - traefik.http.services.people2.loadbalancer.server.port=${PORT:-3000}
      - traefik.http.routers.people2.rule=Host("people.${DOMAIN:-dev.jkldsa.com}")
      - traefik.http.routers.people2.tls=true
      - traefik.http.routers.people2.middlewares=cgibin

      - traefik.http.middlewares.api.addPrefix.prefix=/fakeapi
      - traefik.http.routers.epflapi.rule=Host("api.${DOMAIN:-dev.jkldsa.com}")
      - traefik.http.routers.epflapi.middlewares=api
      - traefik.http.routers.epflapi.tls=true

      # - traefik.http.routers.peoplengrok.rule=Host("2.tcp.eu.ngrok.io")
      # - traefik.http.routers.peoplengrok.tls=true
    networks:
      - traefik
      - default
    tty: true
    stdin_open: true

  # directus:
  #   image: directus/directus:11.0.0
  #   volumes:
  #     - directus_uploads:/directus/uploads
  #     - directus_extensions:/directus/extensions
  #   environment:
  #     PUBLIC_URL: "https://directus.${DOMAIN:-dev.jkldsa.com}"
  #     SECRET: "whatever"
  #     ADMIN_EMAIL: "giovanni.cangiani@epfl.ch"
  #     ADMIN_PASSWORD: "1234"
  #     DB_CLIENT: "mysql"
  #     DB_HOST: mariadb
  #     DB_PORT: 3306
  #     DB_DATABASE: people
  #     DB_USER: people
  #     DB_PASSWORD: mariadb
  #     WEBSOCKETS_ENABLED: "true"
  #     LOG_LEVEL: debug
  #     LOG_STYLE: pretty
  #   labels:
  #     - traefik.docker.network=traefik
  #     - traefik.http.services.directus.loadbalancer.server.port=8055
  #     - traefik.http.routers.directus.rule=Host("directus.${DOMAIN:-dev.jkldsa.com}")
  #     - traefik.http.routers.directus.tls=true
  #   networks:
  #     - traefik
  #     - default

  noc:
    image: ${NOCIMAGE:-jonlabelle/network-tools}
    stdin_open: true
    tty: true
    profiles:
      - noc
    networks:
      - traefik
      - default

  phpmyadmin:
    image: phpmyadmin/phpmyadmin
    environment:
      - PMA_HOST=mariadb
      - PMA_ABSOLUTE_URI=https://peopledb.${DOMAIN:-dev.jkldsa.com}
      - PMA_ARBITRARY=1
    # volumes:
    #   - ./storage/phpmyadmin_sessions:/sessions
    labels:
      - traefik.docker.network=traefik
      - traefik.http.routers.peodb2.rule=Host("peopledb.${DOMAIN:-dev.jkldsa.com}")
      - traefik.http.routers.peodb2.tls=true
      - traefik.http.services.peodb2.loadbalancer.server.port=80
    networks:
      - traefik
      - default

  # TODO: add also firefox as an option (see https://nicolasiensen.github.io/2022-03-11-running-rails-system-tests-with-docker/)
  # https://github.com/SeleniumHQ/docker-selenium
  selenium:
    image: selenium/standalone-chrome:112.0
    shm_size: "2gb"
    profiles:
      - test
    labels:
      - traefik.docker.network=traefik
      - traefik.http.services.peoselen.loadbalancer.server.port=7900
      - traefik.http.routers.peoselen.rule=Host("selenium.${DOMAIN:-dev.jkldsa.com}")
      - traefik.http.routers.peoselen.tls=true
    networks:
      - traefik
      - default

volumes:
  mariadb: {}
  filecache: {}
  storage: {}
  # directus_uploads: {}
  # directus_extensions: {}
networks:
  traefik:
    external: true
